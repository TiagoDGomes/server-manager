#!/usr/bin/env bash

. lib/include_default

IPV4_ADDRESS_TEST_GATEWAY="8.8.8.8"
IPV6_ADDRESS_TEST_GATEWAY="2001:4860:4860::8888"

interface_choice=()
INTERFACES=$(ip link | grep "UP" | grep "BROADCAST" |  cut -d ":" -f2)
for n in $INTERFACES; do
   mac=$(cat /sys/class/net/$n/address)
   device_name=""
   if [ -f "/sys/class/net/$n/device/uevent" ]; then
      slot_name=$(cat /sys/class/net/$n/device/uevent | grep "PCI_SLOT_NAME" | cut -d "=" -f 2)
      driver=$(cat /sys/class/net/$n/device/uevent | grep "DRIVER" | cut -d "=" -f 2)
      if [ ! -z "$slot_name" ]; then
         device_name=$(lspci -s "$slot_name" | cut -d ":" -f 3)
         device_name=`echo $device_name | sed 's/ *$//g'` 
      else
         device_name="$driver"
      fi 
   fi
   interface_choice+=("$n")
   interface_choice+=("[$mac] $device_name")
done
INTERFACE=$(whiptail --backtitle "$LABEL_BACKTITLE" \
               --title "$LABEL_NETWORK_INTERFACE" \
               --menu "\n$LABEL_NETWORK_INTERFACE_CHOICE\n" 14 78 5 \
               "${interface_choice[@]}"  3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus != 0 ]; then
   return 1
fi


IPV4_ADDRESS="$(ip addr show $INTERFACE | grep "inet " | cut -d " " -f 6 | cut -d "/" -f 1)"
IPV4_GATEWAY="$(ip route get $IPV4_ADDRESS_TEST_GATEWAY | grep "via" | cut -d " " -f 3)"

ipv4_choices=()
for ip in $IPV4_ADDRESS; do
   ipv4_choices+=("$ip")
   ipv4_choices+=("")   
done
IPV4_ADDRESS=$(whiptail --backtitle "$LABEL_BACKTITLE" \
               --title "$LABEL_NETWORK_INTERFACE" \
               --menu "\n$LABEL_IPV4_CHOICE\n" 14 78 5 \
               "${ipv4_choices[@]}"  3>&1 1>&2 2>&3)

exitstatus=$?
if [ $exitstatus != 0 ]; then
   exit 1
fi

IPV4_ADDRESS_MASK="$(ip addr show $INTERFACE | grep "$IPV4_ADDRESS" | cut -d " " -f 6 | cut -d "/" -f 2)"
IPV4_ADDRESS_BRD="$(ip addr show $INTERFACE | awk '/inet / {print $4}')"
IPV4_ADDRESS_NET=$(info_net_addr_net $IPV4_ADDRESS $(subnet $IPV4_ADDRESS_MASK))


if [[ ! -z "$IPV6_OPTION"  &&  $IPV6_OPTION != "0" ]]; then
   IPV6_ADDRESS="$(ip addr show $INTERFACE | grep "inet6 " | grep "global" | cut -d " " -f 6 | cut -d "/" -f 1)"
   if [ ! -z "$IPV6_ADDRESS" ]; then
      IPV6_GATEWAY="$(ip -6 route get $IPV6_ADDRESS_TEST_GATEWAY | grep "via" | cut -d " " -f 5)"
      ipv6_choices=()
      for ip6 in $IPV6_ADDRESS; do
         ipv6_choices+=("$ip6")
         ipv6_choices+=("")   
      done

      IPV6_ADDRESS=$(whiptail --backtitle "$LABEL_BACKTITLE" \
                     --title "$LABEL_NETWORK_INTERFACE" \
                     --menu "\n$LABEL_IPV6_CHOICE\n" 14 78 5 \
                     "${ipv6_choices[@]}"  3>&1 1>&2 2>&3)
      IPV6_ADDRESS_MASK="$(ip addr show $INTERFACE | grep "$IPV6_ADDRESS" | cut -d " " -f 6 | cut -d "/" -f 2)"

      exitstatus=$?
      if [ $exitstatus != 0 ]; then
         exit 1
      fi
   fi
fi

